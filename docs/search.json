[{"path":"/articles/Avian-response_Landscape-recovery.html","id":"avian-functional-responses-to-landscape-recovery","dir":"Articles","previous_headings":"","what":"Avian functional responses to landscape recovery","title":"Avian Response to Recovering Landscapes","text":"Citation: Ikin, Karen et al. (2019), Data : Avian functional responses landscape recovery, Dryad, Dataset, https://doi.org/10.5061/dryad.d6k0804 data set retrieved DRYAD public domain, released Charles Darwin University, McGill University, James Cook University. aim database measure effect restoring vegetation across 17 sites Australia. data set also includes ecological traits birds, attributes restored sites.","code":""},{"path":"/articles/Avian-response_Landscape-recovery.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Avian Response to Recovering Landscapes","text":"searching DRYAD explanation dataset, found supplementary material published article Journal Royal Society Publishing. first two data files imported directly DRYAD. files DRYAD abbreviated species names, combined supplemental material recreate table. column names bird data reference different species local Australia. IDs reference multiple measurements multiple sites. SiteData.txt information various sites, including geographic location.","code":"BirdData_full <- read.delim(\"../data-raw/Ikin_2019_BirdData.txt\") SiteData_full <- read.delim(\"../data-raw/Ikin_2019_SiteData.txt\")  head(colnames(BirdData_full)) ## [1] \"id\"    \"amag\"  \"apos\"  \"arav\"  \"bb\"    \"bbowl\" species <- read.csv(\"../data-raw/SPECIES-GENUS.csv\") new_names <- c(\"id\") append(x = new_names,species$Species,1) -> new_names colnames(BirdData_full) <- c(new_names)  BirdSite_Data <- full_join(BirdData_full, SiteData_full, by =\"id\") apply(X = BirdSite_Data[2:122], MARGIN = 2, sum) -> small_table # BirdSite_Data <- full_join(BirdData_full, SiteData_full, by =\"id\") head(BirdSite_Data[122:130]) ##   Yellow-tailed Black-Cockatoo Yellow-tufted Honeyeater year    growth   site ## 1                            0                        0 2002 oldgrowth ARCH-1 ## 2                            0                        0 2002  regrowth ARCH-2 ## 3                            0                        0 2002  regrowth ARCH-3 ## 4                            0                        0 2002  regrowth ARCH-4 ## 5                            0                        0 2002  planting BELL-1 ## 6                            0                        0 2002 oldgrowth BELL-2 ##   farm     land     long       lat ## 1 Arch Gundagai 148.0782 -35.13095 ## 2 Arch Gundagai 148.1011 -35.16487 ## 3 Arch Gundagai 148.0843 -35.16774 ## 4 Arch Gundagai 148.0770 -35.17336 ## 5 Bell Tarcutta 147.6615 -35.30462 ## 6 Bell Tarcutta 147.6592 -35.30638"},{"path":"/articles/Avian-response_Landscape-recovery.html","id":"across-new-south-wales","dir":"Articles","previous_headings":"","what":"Across New South Wales","title":"Avian Response to Recovering Landscapes","text":"heatmap sites measured. sites southern region New South Wales, state currently deforesting portions Nagmadi National Forest Canberra. dataset considering family birds NSW, relevant see deforesting can affect native species populations. SiteData.txt file also includes background physical state farm (Planting / Regrowing / Growth), well tree coverage. important vectors consider effect species.","code":""},{"path":"/articles/Avian-response_Landscape-recovery.html","id":"initial-explanation-of-variables","dir":"Articles","previous_headings":"","what":"Initial Explanation of Variables","title":"Avian Response to Recovering Landscapes","text":"","code":"BirdSite_Data %>%    filter(ln_cover != 0) -> BirdSite_Data   ggplot(data=BirdSite_Data, mapping = aes(x = farm, y = site.rich, color = growth)) +   geom_point(size = 2.25) +   geom_smooth(method = lm) +   xlab(label = \"Active Sites in New South Wales\") +   ylab(label = \"Total count per Visit\") ## `geom_smooth()` using formula = 'y ~ x' ggplot(data=BirdSite_Data, mapping = aes(x = ln_cover, y = site.rich, color = growth)) +   geom_point() +   geom_smooth(method = loess) +   xlab(label = \"Ln of tree coverage per site\") +   ylab(label = \"Total count per visit\") ## `geom_smooth()` using formula = 'y ~ x'"},{"path":"/articles/Avian-response_Landscape-recovery.html","id":"taxonomic-analysis-opentree-taxonomy","dir":"Articles","previous_headings":"","what":"Taxonomic Analysis & OpenTree Taxonomy","title":"Avian Response to Recovering Landscapes","text":"author included supplementary data table original article. Let’s reduce species number found across given sites. generate plot represents abundant species birds across sites.","code":"## ggtree v3.6.2 For help: https://yulab-smu.top/treedata-book/ ##  ## If you use the ggtree package suite in published research, please cite ## the appropriate paper(s): ##  ## Guangchuang Yu, David Smith, Huachen Zhu, Yi Guan, Tommy Tsan-Yuk Lam. ## ggtree: an R package for visualization and annotation of phylogenetic ## trees with their covariates and other associated data. Methods in ## Ecology and Evolution. 2017, 8(1):28-36. doi:10.1111/2041-210X.12628 ##  ## G Yu. Data Integration, Manipulation and Visualization of Phylogenetic ## Trees (1st ed.). Chapman and Hall/CRC. 2022. ISBN: 9781032233574 ##  ## S Xu, Z Dai, P Guo, X Fu, S Liu, L Zhou, W Tang, T Feng, M Chen, L ## Zhan, T Wu, E Hu, Y Jiang, X Bo, G Yu. ggtreeExtra: Compact ## visualization of richly annotated phylogenetic data. Molecular Biology ## and Evolution. 2021, 38(9):4039-4042. doi: 10.1093/molbev/msab166 ##  ## Attaching package: 'ggtree' ## The following objects are masked from 'package:ggmap': ##  ##     inset, theme_inset ##  ## Attaching package: 'ape' ## The following object is masked from 'package:ggtree': ##  ##     rotate ## The following object is masked from 'package:dplyr': ##  ##     where small_table <- data.frame((small_table))  colnames(small_table)[1] <- \"Count\" small_table$Species <- c(species$Species[1:121]) small_table %>%    filter(Count >= 150) -> smaller_table   ## Colnames[0] does not exist. There is no column to read by if I cannot grab this column. Revisit your named integer data frame.   left_join(smaller_table,species, by = \"Species\") -> bird_list   bird_taxa <- tnrs_match_names(bird_list$Scientific.name)  bird_taxa %>%    filter(flags == \"sibling_higher\") -> newlist newlist ##       search_string       unique_name approximate_match ott_id is_synonym ## 1 corvus coronoides Corvus coronoides             FALSE 808257      FALSE ## 2  sturnus vulgaris  Sturnus vulgaris             FALSE 565813      FALSE ##            flags number_matches ## 1 sibling_higher              1 ## 2 sibling_higher              1 bird_tr <- tol_induced_subtree(ott_ids = bird_taxa$ott_id) ##  Progress [---------------------------------] 0/213 (  0) ?s Progress [==============================] 213/213 (100)  0s ## Warning in collapse_singles(tr, show_progress): Dropping singleton nodes with ## labels: mrcaott246ott7145, mrcaott246ott5272, mrcaott246ott928360, ## mrcaott246ott1858, mrcaott246ott3600042, mrcaott246ott47588, Passeriformes ## ott1041547, mrcaott246ott3212, mrcaott246ott428578, mrcaott246ott32658, ## mrcaott246ott22325, mrcaott246ott176461, mrcaott246ott10351, mrcaott246ott3364, ## mrcaott246ott5934, mrcaott246ott1566, mrcaott1566ott3598440, ## mrcaott1566ott496009, mrcaott1566ott2175, mrcaott2175ott968664, ## mrcaott2175ott259082, mrcaott2175ott59905, mrcaott2175ott2224, ## mrcaott2224ott366470, mrcaott366470ott565813, mrcaott1488ott72472, ## mrcaott1488ott2375, mrcaott1488ott63797, mrcaott1488ott284404, ## mrcaott1488ott110316, mrcaott1488ott17016, mrcaott1488ott107463, ## mrcaott107463ott353520, mrcaott107463ott177058, mrcaott107463ott107476, ## mrcaott107476ott337752, mrcaott337752ott374222, mrcaott374222ott865537, ## mrcaott4820ott409116, mrcaott4820ott20989, mrcaott4820ott58860, ## mrcaott4820ott11462, mrcaott4820ott140440, mrcaott4820ott197505, ## mrcaott4820ott75978, mrcaott4820ott11315, mrcaott4820ott5933, ## mrcaott5933ott60456, mrcaott5933ott60465, Corvus ott952596, ## mrcaott5933ott25637, mrcaott25637ott199843, mrcaott25637ott473431, ## mrcaott25637ott686166, mrcaott25637ott111993, mrcaott25637ott183621, ## mrcaott25637ott249747, mrcaott25637ott48946, mrcaott48946ott197189, ## mrcaott48946ott872547, mrcaott48946ott269185, mrcaott269185ott5560983, ## mrcaott269185ott289433, mrcaott289433ott289472, mrcaott289472ott318519, ## Monarchidae ott817406, mrcaott23803ott754846, Grallina ott489918, ## mrcaott23690ott242575, mrcaott23690ott749725, mrcaott23690ott520286, ## Corcoracidae ott1092341, Corcorax ott659774, mrcaott20998ott31161, ## mrcaott31161ott226273, mrcaott31161ott72045, mrcaott31161ott71163, ## mrcaott31161ott72035, mrcaott31161ott276716, Gymnorhina ott613403, Artamus ## (genus in Deuterostomia) ott1054558, mrcaott563268ott563269, ## mrcaott75981ott80432, mrcaott80432ott174107, mrcaott174107ott877146, ## mrcaott174107ott258829, mrcaott174107ott309058, mrcaott174107ott352337, ## mrcaott352337ott634888, mrcaott352337ott842491, mrcaott352337ott408047, ## mrcaott408047ott632503, mrcaott258828ott258831, mrcaott258831ott258832, ## mrcaott258832ott258837, mrcaott258832ott258834, mrcaott258832ott366204, ## mrcaott258832ott258833, mrcaott258832ott877153, mrcaott258832ott366180, ## mrcaott366180ott884904, mrcaott17162ott89234, mrcaott89237ott89244, ## mrcaott89237ott675870, mrcaott675870ott7068331, mrcaott675870ott715129, ## mrcaott675870ott7068326, mrcaott89243ott663338, mrcaott89243ott101677, ## mrcaott89243ott95987, mrcaott95987ott849630, mrcaott95987ott95994, ## mrcaott95987ott140655, mrcaott140655ott4947730, mrcaott140655ott143158, ## mrcaott143158ott675868, mrcaott143158ott5561007, mrcaott143158ott534614, ## mrcaott143158ott4947734, mrcaott143158ott665637, mrcaott143158ott346147, ## mrcaott346147ott665636, mrcaott5929ott196938, mrcaott5929ott109304, ## mrcaott5929ott6258, mrcaott5929ott6262, mrcaott6262ott45233, ## mrcaott45233ott58052, mrcaott45233ott58048, mrcaott58048ott140612, ## mrcaott140612ott504461, mrcaott58049ott927348, mrcaott58049ott58050, Manorina ## ott465914, mrcaott58049ott465906, mrcaott376597ott701813, ## mrcaott376597ott927350, Anthochaera ott109305, mrcaott376597ott527595, ## mrcaott527595ott527605, mrcaott32480ott255826, mrcaott32480ott45221, ## mrcaott32480ott201676, Acanthiza ott808271, mrcaott32480ott161777, ## mrcaott32480ott808269, Gerygone ott918680, mrcaott32484ott32490, ## mrcaott32484ott315041, Pardalotidae ott1093579, Pardalotus ott598356, ## mrcaott757323ott1066393, Maluridae ott901832, mrcaott35023ott287283, ## mrcaott35023ott650063, Malurus ott901831, mrcaott35023ott804479, ## mrcaott35023ott168420, mrcaott168420ott436423, mrcaott436423ott563582, ## mrcaott44866ott308793, Climacteridae ott73972, mrcaott308793ott884906, ## Climacteris ott531218, mrcaott308793ott531212, Psittaciformes ott1020133, ## mrcaott7113ott33330, mrcaott7113ott7116, mrcaott7113ott225201, ## mrcaott7113ott7124, mrcaott7124ott7125, mrcaott7125ott58949, ## mrcaott7125ott233194, mrcaott7125ott14155, mrcaott7125ott961466, Platycercus ## ott512910, mrcaott19460ott893569, mrcaott19460ott209187, Psephotus ott246411, ## Cacatuidae ott512919, mrcaott58938ott119421, mrcaott58938ott7068761, ## mrcaott58938ott900913, Eolophus ott900916, mrcaott2907ott6895, ## mrcaott6895ott36453, mrcaott6895ott897867, mrcaott6895ott95396, ## mrcaott6895ott12995, mrcaott12995ott26078, mrcaott26078ott150514, ## mrcaott26078ott284298, mrcaott26078ott88365, mrcaott26078ott26085, ## mrcaott26085ott26092, mrcaott26092ott26094, mrcaott234476ott234478, ## mrcaott234476ott234479, mrcaott234479ott704458, mrcaott234479ott757734, ## mrcaott234479ott757735, Dacelo ott938421, mrcaott5021ott17146, ## mrcaott17146ott57819, Columbiformes ott363030, mrcaott17146ott45505, ## mrcaott17146ott28962, mrcaott17146ott17148, mrcaott28965ott380071, ## mrcaott28965ott147369, mrcaott147369ott392967, mrcaott392967ott550853, Ocyphaps ## ott981605 plot(bird_tr)"},{"path":"/articles/intro.html","id":"can-we-make-a-graph-from-this-data","dir":"Articles","previous_headings":"","what":"Can we make a graph from this data?","title":"intro","text":"plot function useful, powerful. hard add titles, even difficult change plot types. ever heatmap via plot? can’t. instead use ggplot.","code":"plot(x=acacia$HEIGHT,y=acacia$AXIS1)"},{"path":"/articles/intro.html","id":"how-do-we-use-ggplot","dir":"Articles","previous_headings":"","what":"How do we use ggplot?","title":"intro","text":"’s goood question. Use geom_point() create scatter plot. want reshape axes? functions scale() data set.   must always call ggplot access graphical interface. differences lie interlayed functions.","code":"library(ggplot2) ggplot(data=acacia, mapping = aes(x=HEIGHT, y= AXIS1, color = TREATMENT)) +   geom_point() +   labs(x=\"Tree Height\", y = \"Tree Axis 1\") #> Warning: Removed 4 rows containing missing values (`geom_point()`). ggplot(data = acacia, mapping = aes(x = HEIGHT, y = FRUITS, color = ANT)) +   geom_point(size = 3, alpha= 0.5) + ## Use facet_wrap    facet_wrap(~ANT, scales = \"free\") #> Warning: Removed 4 rows containing missing values (`geom_point()`). ##Add in geom_smooth() for data insight##    ggplot(data = acacia, mapping = aes(x = CIRC, y = HEIGHT, color = TREATMENT)) +   ##alpha is a modifier of point transparaceny   geom_point(size = 3, alpha = 0.667) +    geom_smooth() #method = \" + #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x' #> Warning: Removed 4 rows containing non-finite values (`stat_smooth()`). #> Removed 4 rows containing missing values (`geom_point()`). ggsave(filename = \"jw_acacia_treatment.jpg\") #> Saving 7.29 x 4.51 in image #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x' #> Warning: Removed 4 rows containing non-finite values (`stat_smooth()`). #> Removed 4 rows containing missing values (`geom_point()`). ggplot(data=acacia, mapping = aes(x=TREATMENT)) +   geom_bar() ggplot(acacia, aes(x=CIRC, color= TREATMENT)) +   ## `bins = ` defines how many boxes are displayed    ## `Fill = ` is for color    geom_histogram(bins = 20, fill = \"slategray3\") #> Warning: Removed 4 rows containing non-finite values (`stat_bin()`). #ggsave(\"../197-figures/acacia_Circ_by_treatment.jpg\")"},{"path":"/articles/visualization_in_R.html","id":"what-is-the-purpose-of-this-page","dir":"Articles","previous_headings":"","what":"What is the purpose of this page?","title":"Visualization in R","text":"short tutorial basics extracting, evaluating, plotting RStudio. best, working practice dataset Ecological Society America, paper entitled Plant small-mammal responses large-herbivore exclusion African savanna: five years UHURU experiment. UHURU studies effect herbivores various plants Kenya. data set particular focuses effects different treatments Acacia trees. treatments different areas Kenya, predation levels (species) diversified. first call file, based current directory. use read.table() access file.","code":"getwd() #> [1] \"/Users/slimjims/Desktop/master/R-studio/portalData/vignettes\" ## Provide file using a relative path ## acacia_csv <- (\"../data-raw/ACACIA_DREPANOLOBIUM_SURVEY.txt\") ## add `na.strings = \"dead\" acacia <- read.table(acacia_csv, header = TRUE, sep = \"\\t\", fill = TRUE)"},{"path":"/articles/visualization_in_R.html","id":"modifying-a-data-frame","dir":"Articles","previous_headings":"","what":"Modifying a data frame","title":"Visualization in R","text":"’ve read file variable environment. can quickly find data set? handful commands can help us . personal favorites : head - read first 10 lines first 10 columns summary - simple mathematical calculations data set str - displays 10 values column, data type View - creates table another tab class - disaplys data type using str() function, see small oddities data set. example, height character vector? can issue mathematical calculations. Let’s try find issue lies. Data Frames, sort Column, Row using df[Column,Row], df refers name data frame. run df[,X], get full list values Column. can also use $ string index sort columns. Since know aspect HEIGHT leading column chr type, let’s look full column see issue lies. appears authors dataset referred deceased plants ‘dead’. However, want HEIGHT num type, need replace values. One function , simplest method, .numeric(). create new vector can replace column data frame. running command, coerced character strings NA values. way, can run mathematical statistics data set. caught earlier, maybe imported data set, ’ve forced NAs import. Let’s try now feature read.table(), referred na.strings =","code":"#head(acacia) str(acacia) #> 'data.frame':    157 obs. of  15 variables: #>  $ SURVEY   : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ YEAR     : int  2012 2012 2012 2012 2012 2012 2012 2012 2012 2012 ... #>  $ SITE     : chr  \"SOUTH\" \"SOUTH\" \"SOUTH\" \"SOUTH\" ... #>  $ BLOCK    : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ TREATMENT: chr  \"TOTAL\" \"TOTAL\" \"TOTAL\" \"TOTAL\" ... #>  $ PLOT     : chr  \"S1TOTAL\" \"S1TOTAL\" \"S1TOTAL\" \"S1TOTAL\" ... #>  $ ID       : int  581 582 3111 3112 3113 3114 3115 3199 941 942 ... #>  $ HEIGHT   : chr  \"2.25\" \"2.65\" \"1.5\" \"2.01\" ... #>  $ AXIS1    : num  2.75 4.1 1.7 1.8 1.84 1.62 1.95 2 2.15 5.55 ... #>  $ AXIS2    : num  2.15 3.9 0.85 1.6 1.42 0.85 0.9 1.75 1.82 4.82 ... #>  $ CIRC     : num  20 28 17 12 13 15 9 12.2 13 35 ... #>  $ FLOWERS  : int  0 0 2 0 0 0 0 0 0 0 ... #>  $ BUDS     : int  0 0 1 0 0 0 0 0 0 0 ... #>  $ FRUITS   : int  10 150 50 75 20 0 0 25 0 50 ... #>  $ ANT      : chr  \"CS\" \"TP\" \"TP\" \"CS\" ... #summary(acacia) acacia$HEIGHT #>   [1] \"2.25\" \"2.65\" \"1.5\"  \"2.01\" \"1.75\" \"1.65\" \"1.2\"  \"1.45\" \"1.87\" \"2.38\" #>  [11] \"2.58\" \"2.65\" \"2.35\" \"1.88\" \"2.32\" \"2.39\" \"2.2\"  \"1.05\" \"2\"    \"1.28\" #>  [21] \"dead\" \"1.4\"  \"1.9\"  \"1.75\" \"1.8\"  \"2.7\"  \"2.02\" \"1.9\"  \"1.85\" \"1.65\" #>  [31] \"1.4\"  \"2.5\"  \"2.05\" \"2.26\" \"2.13\" \"1.8\"  \"1.85\" \"1.5\"  \"1.87\" \"1.58\" #>  [41] \"2.05\" \"1.75\" \"1.49\" \"1.28\" \"1.49\" \"1.07\" \"1.48\" \"1.25\" \"1.41\" \"1.6\"  #>  [51] \"1.2\"  \"1.49\" \"1.5\"  \"1.65\" \"1.13\" \"1.25\" \"1.1\"  \"2.2\"  \"1.45\" \"1.6\"  #>  [61] \"1.55\" \"1.5\"  \"1.03\" \"2.14\" \"1.2\"  \"1.05\" \"1.8\"  \"1.2\"  \"1.75\" \"1.45\" #>  [71] \"1.17\" \"2.15\" \"1.7\"  \"1.98\" \"1.26\" \"1.11\" \"1.14\" \"1.26\" \"1.3\"  \"1.29\" #>  [81] \"1.31\" \"1.15\" \"1.87\" \"1.47\" \"1.05\" \"2.1\"  \"1.99\" \"1.42\" \"1.5\"  \"1.06\" #>  [91] \"1.49\" \"1.8\"  \"1.93\" \"1.2\"  \"1.65\" \"1.52\" \"1.43\" \"1.25\" \"1.88\" \"1.03\" #> [101] \"1.1\"  \"1.4\"  \"1.05\" \"1.18\" \"1.4\"  \"1.37\" \"1.32\" \"1.55\" \"1.3\"  \"1.24\" #> [111] \"1.5\"  \"1.65\" \"2.17\" \"1.28\" \"1.07\" \"0.67\" \"0.68\" \"1.87\" \"1.35\" \"1.75\" #> [121] \"1.75\" \"1.64\" \"1.42\" \"dead\" \"0.9\"  \"dead\" \"1.8\"  \"2.47\" \"2.15\" \"1.7\"  #> [131] \"1.9\"  \"1.95\" \"1.8\"  \"1.4\"  \"1\"    \"1.75\" \"1.28\" \"1\"    \"1.45\" \"1\"    #> [141] \"1.03\" \"1.51\" \"1.17\" \"1.33\" \"1.3\"  \"1.13\" \"1.58\" \"1.06\" \"1.05\" \"1.45\" #> [151] \"1.15\" \"1.42\" \"1.02\" \"1.4\"  \"1.45\" \"1.95\" \"dead\" acacia[21,8] #> [1] \"dead\" col_height <- as.numeric(acacia$HEIGHT) #> Warning: NAs introduced by coercion acacia$HEIGHT <- col_height acacia <- read.table(acacia_csv, header = TRUE, sep = \"\\t\", na.strings = \"dead\")"},{"path":"/articles/visualization_in_R.html","id":"can-we-make-a-graph-from-this-data","dir":"Articles","previous_headings":"","what":"Can we make a graph from this data?","title":"Visualization in R","text":"Now clean dataset, let’s try plotting plot().  plot function useful, powerful. hard add titles, even difficult change plot types. ever heatmap via plot? can’t. instead use ggplot.","code":"plot(x=acacia$HEIGHT,y=acacia$AXIS1)"},{"path":"/articles/visualization_in_R.html","id":"how-do-we-use-ggplot","dir":"Articles","previous_headings":"","what":"How do we use ggplot?","title":"Visualization in R","text":"ggplot2 standard R package used graphing, highly modifiable. basic setup ggplot follows: ggplot(data = df, mapping = aes(x = [independent_variable]), y = [dependent_variable] ) + geom_[graph_type] + ...addtl args use geom_point() create scatter plot, measuring HEIGHT AXIS1 (width)  want reshape axes? functions scale() data set.   must always call ggplot access graphical interface. differences lie interlaced functions.   Add example Geom_line :)","code":"library(ggplot2) ggplot(data=acacia, mapping = aes(x=HEIGHT, y= AXIS1, color = TREATMENT)) +   geom_point() +   labs(x=\"Tree Height\", y = \"Tree Axis 1\") #> Warning: Removed 4 rows containing missing values (`geom_point()`). ggplot(data = acacia, mapping = aes(x = HEIGHT, y = FRUITS, color = ANT)) +   geom_point(size = 3, alpha= 0.5) + ## Use facet_wrap    facet_wrap(~ANT, scales = \"free\") #> Warning: Removed 4 rows containing missing values (`geom_point()`). ## Add in geom_smooth() for data insigh t##    ggplot(data = acacia, mapping = aes(x = CIRC, y = HEIGHT, color = TREATMENT)) +   ## alpha is a modifier of point transparaceny   geom_point(size = 3, alpha = 0.667) +    geom_smooth() #method = \" + #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x' #> Warning: Removed 4 rows containing non-finite values (`stat_smooth()`). #> Removed 4 rows containing missing values (`geom_point()`). ggsave(filename = \"jw_acacia_treatment.jpg\") #> Saving 7.29 x 4.51 in image #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x' #> Warning: Removed 4 rows containing non-finite values (`stat_smooth()`). #> Removed 4 rows containing missing values (`geom_point()`). ggplot(data=acacia, mapping = aes(x=TREATMENT)) +   geom_bar() ggplot(acacia, aes(x=CIRC, color= TREATMENT)) +   ## `bins = ` defines how many boxes are displayed    ## `Fill = ` is for color    geom_histogram(bins = 20, fill = \"slategray3\") #> Warning: Removed 4 rows containing non-finite values (`stat_bin()`). #ggsave(\"../197-figures/acacia_Circ_by_treatment.jpg\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"James J. Waterford. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Waterford J (2023). JWtaxonTree: JW Taxon Analysis | Portal Project. R package version 0.1.0.","code":"@Manual{,   title = {JWtaxonTree: JW Taxon Analysis | Portal Project},   author = {James J. Waterford},   year = {2023},   note = {R package version 0.1.0}, }"},{"path":"/index.html","id":"ecological-and-taxonomic-analysis","dir":"","previous_headings":"","what":"JW Taxon Analysis | Portal Project","title":"JW Taxon Analysis | Portal Project","text":"goal page document tools R best used analyzing large sets ecological data. current scope, greatly like extend toward areas statistical analysis, considering , importance genomic data relation taxonomic trees. Analyzing large sets ecological data crucial understanding complex interactions within ecosystems developing evidence-based strategies conservation management. Large data sets allow robust statistical analysis modeling, providing valuable insights functioning ecosystems, identifying patterns relationships, monitoring changes biodiversity ecosystem services.","code":""},{"path":"/index.html","id":"current-projects","dir":"","previous_headings":"","what":"Current Projects","title":"JW Taxon Analysis | Portal Project","text":"restoration native vegetation agricultural landscapes can help reverse loss biodiversity increasing number species present. High levels landscape-scale tree cover patch-scale restoration significant contributors functional change overall bird assemblage.","code":""},{"path":"/index.html","id":"future-goals","dir":"","previous_headings":"","what":"Future Goals","title":"JW Taxon Analysis | Portal Project","text":"Analyzing transcriptomic data neurons identify genes differentially expressed specific phases signaling pathways. Developing computational models simulate neuron signaling events predict effects gene expression changes signaling pathways. Using bioinformatics tools analyze epigenetic modifications affect gene expression neurons different signaling events.","code":""},{"path":"/reference/portaldata.html","id":null,"dir":"Reference","previous_headings":"","what":"Portal Data Set and Analysis — portaldata","title":"Portal Data Set and Analysis — portaldata","text":"package contains data sets Portal Project easy reuse reanalysis.","code":""},{"path":"/reference/taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Taxonomy of species sampled — taxonomy","title":"Taxonomy of species sampled — taxonomy","text":"data set containing taxonomy species sampled Portal Project Data. followed taxonomy Open Tree Life .","code":""},{"path":"/reference/taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Taxonomy of species sampled — taxonomy","text":"","code":"taxonomy"},{"path":"/reference/taxonomy.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Taxonomy of species sampled — taxonomy","text":"data frame 10 columns 54 rows. Columns include: \"label\", \"species_id\", \"genus\", \"species\", \"taxa\", \"ott_name\", \"approximate_match\", \"ott_id\",         \"is_synonym\", \"flags\"","code":""},{"path":"/reference/taxonomy.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Taxonomy of species sampled — taxonomy","text":"https://lunasare.github.io/spring2023-data-science/data/portal-species-taxonomy.csv","code":""}]
